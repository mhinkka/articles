Include("D:\\dev\\aalto\\papers\\nn-predictions-extended\\src\\test.paexp");
//CreateModelAndTest("BPIC13_incidents", 0.9, Def("", Events[0].impact), [], ["impact"], null, "C:\\Users\\marhink\\Dropbox\\Aalto\\testing\\testruns\\result.csv");

Let("targetDir", "D:\\dev\\aalto\\testing\\testdata");
//Let("targetDir", "C:\\Users\\marhink\\Dropbox\\Aalto\\testing\\testruns");

// BPIC13
Let("skippedCaseAttributes", []); // AMOUNT_REQ
Let("skippedEventAttributes", []); // impact, lifecycle:transition, org:group, org:resource, organization country
CreateEventLogExports("BPIC13_incidents", "BPIC13_incidents-impact", 0.9, Def("", Events[0].impact), skippedCaseAttributes, Concat(["impact"], skippedEventAttributes), null, targetDir);
CreateEventLogExports("BPIC13_incidents", "BPIC13_incidents-long-running", 1.0, Def("", Duration.TotalDays >= 14), skippedCaseAttributes, skippedEventAttributes, null, targetDir);
//CreateEventLogExportsForNextEventPrediction("BPIC13_incidents", "BPIC13_incidents-ne", 0.9, 0.1, skippedCaseAttributes, skippedEventAttributes, targetDir);
CreateEventLogExportsForNextEventPrediction("BPIC13_incidents", "BPIC13_incidents-big-ne", 0.9, 1.0, skippedCaseAttributes, skippedEventAttributes, targetDir);
//CreateEventLogExportsForNextEventPredictionFinalOnly("BPIC13_incidents", "BPIC13_incidents-big-ne-fe", 0.9, 1.0, skippedCaseAttributes, skippedEventAttributes, targetDir);
CreateEventLogExportsForGeneratedCases("BPIC13_incidents", "BPIC13_incidents-not-completed-resolved", 0.9, Def("", "cases", "caseAttributes", "eventAttributes", GetCasesForPredictingEventTypeOccurrence(cases, caseAttributes, eventAttributes, "Completed - Resolved", 1, 1.0)), skippedCaseAttributes, Concat(["lifecycle:transition"], skippedEventAttributes), targetDir);
Let("el", EventLogByModelName("BPIC13_incidents"));
Let("percentiles", Percentile(el.Cases.Duration.TotalDays, [0.1, 0.25, 0.75, 0.9]));
CreateEventLogExports("BPIC13_incidents", "BPIC13_incidents-dur", 0.9, Def("", TimeGroup(percentiles)), skippedCaseAttributes, skippedEventAttributes, null, targetDir);

// BPIC12
Let("skippedCaseAttributes", ["REG_DATE"]); // AMOUNT_REQ
Let("skippedEventAttributes", []); // lifecycle:transition 
CreateEventLogExports("BPIC12", "BPIC12-long-running", 1.0, Def("", Duration.TotalDays >= 14), skippedCaseAttributes, skippedEventAttributes, null, targetDir);
CreateEventLogExportsForNextEventPrediction("BPIC12", "BPIC12-ne", 0.9, 1.0, skippedCaseAttributes, skippedEventAttributes, targetDir);
CreateEventLogExportsForGeneratedCases("BPIC12", "BPIC12-not-accepted", 0.9, Def("", "cases", "caseAttributes", "eventAttributes", GetCasesForPredictingEventTypeOccurrence(cases, caseAttributes, eventAttributes, "O_ACCEPTED", 1, 1.0)), skippedCaseAttributes, skippedEventAttributes, targetDir);
Let("el", EventLogByModelName("BPIC12"));
Let("percentiles", Percentile(EventLogByModelName("BPIC12").Cases.Duration.TotalDays, [0.1, 0.25, 0.75, 0.9]));
CreateEventLogExports("BPIC12", "BPIC12-dur", 0.9, Def("", TimeGroup(percentiles)), skippedCaseAttributes, skippedEventAttributes, null, targetDir);

// BPIC14
Let("skippedCaseAttributes", ["Close Time", "Handle Time (Hours)", "Open Time", "Reopen Time", "Resolved Time", "Related Interaction"]);
Let("skippedEventAttributes", ["IncidentActivity_Number", "Interaction ID", "KM number"]);
CreateEventLogExports("OriginalRabobankData", "BPIC14-rfi", 0.9, Def("", Category == "request for information"), Concat(["Category"], skippedCaseAttributes), skippedEventAttributes, null, targetDir);
CreateEventLogExports("OriginalRabobankData", "BPIC14-long-running", 1.0, Def("", Duration.TotalDays >= 7), skippedCaseAttributes, skippedEventAttributes, null, targetDir);
CreateEventLogExportsForNextEventPrediction("OriginalRabobankData", "BPIC14-ne", 0.9, 1.0, skippedCaseAttributes, skippedEventAttributes, targetDir);
CreateEventLogExportsForGeneratedCases("OriginalRabobankData", "BPIC14-not-caused-by-ci", 0.9, Def("", "cases", "caseAttributes", "eventAttributes", GetCasesForPredictingEventTypeOccurrence(cases, caseAttributes, eventAttributes, "Caused By CI", 1, 1.0)), skippedCaseAttributes, skippedEventAttributes, targetDir);
Let("el", EventLogByModelName("OriginalRabobankData"));
Let("percentiles", Percentile(EventLogByModelName("OriginalRabobankData").Cases.Duration.TotalDays, [0.1, 0.25, 0.75, 0.9]));
CreateEventLogExports("OriginalRabobankData", "BPIC14-dur", 0.9, Def("", TimeGroup(percentiles)), skippedCaseAttributes, skippedEventAttributes, null, targetDir);

// BPIC17
Let("skippedCaseAttributes", []);
Let("skippedEventAttributes", ["EventID"]);
Let("filterPercentage", 0.5);
CreateEventLogExports("BPIC17", "BPIC17-limit-raise-application", 0.9, Def("", ApplicationType == "Limit raise"), Concat(["ApplicationType"], skippedCaseAttributes), skippedEventAttributes, null, targetDir);
CreateEventLogExports("BPIC17", "BPIC17-long-running", 1.0, Def("", Duration.TotalDays >= 28), skippedCaseAttributes, skippedEventAttributes, null, targetDir);
CreateEventLogExportsForNextEventPrediction("BPIC17", "BPIC17-ne", 0.9, filterPercentage, skippedCaseAttributes, skippedEventAttributes, targetDir);
CreateEventLogExportsForGeneratedCases("BPIC17", "BPIC17-not-denied", 0.9, Def("", "cases", "caseAttributes", "eventAttributes", GetCasesForPredictingEventTypeOccurrence(cases, caseAttributes, eventAttributes, "A_Denied", 1, filterPercentage)), skippedCaseAttributes, skippedEventAttributes, targetDir);
Let("el", EventLogByModelName("BPIC17"));
Let("percentiles", Percentile(EventLogByModelName("BPIC17").Cases.Duration.TotalDays, [0.1, 0.25, 0.75, 0.9]));
CreateEventLogExports("BPIC17", "BPIC17-dur", 0.9, Def("", TimeGroup(percentiles)), skippedCaseAttributes, skippedEventAttributes, null, targetDir);

// Posti_PoC
Let("skippedCaseAttributes", ["L_POSTINUMERO", "LÄHETTÄJÄN_OSOITE", "LISAPALVELUT", "LAHETTAJASOPIMUS", "PAINO", "TILAVUUS", "V_POSTINUMERO", "VASTAANOTTAJAN_OSOITE"]); // "KOHDEMAA", "L_MAAKOODI", "L_POSTITMP", "PRODUCT", "V_MAAKOODI", "V_POSTITMP"
Let("skippedEventAttributes", []); // "Location"
Let("filterPercentage", 0.5);
CreateEventLogExports("Posti_PoC", "Private1-from-helsinki", 0.9, Def("", L_POSTITMP == "HELSINKI"), Concat(["L_POSTITMP"], skippedCaseAttributes), skippedEventAttributes, null, targetDir);
CreateEventLogExports("Posti_PoC", "Private1-long-running", 1.0, Def("", Duration.TotalDays >= 21), skippedCaseAttributes, skippedEventAttributes, null, targetDir);
CreateEventLogExportsForNextEventPrediction("Posti_PoC", "Private1-ne", 0.9, filterPercentage, skippedCaseAttributes, skippedEventAttributes, targetDir);
CreateEventLogExportsForGeneratedCases("Posti_PoC", "Private1-not-pet-pe-tilitys", 0.9, Def("", "cases", "caseAttributes", "eventAttributes", GetCasesForPredictingEventTypeOccurrence(cases, caseAttributes, eventAttributes, "PET - PE-tilitys", 1, filterPercentage)), skippedCaseAttributes, skippedEventAttributes, targetDir);
Let("el", EventLogByModelName("Posti_PoC"));
Let("percentiles", Percentile(EventLogByModelName("Posti_PoC").Cases.Duration.TotalDays, [0.1, 0.25, 0.75, 0.9]));
CreateEventLogExports("Posti_PoC", "Private1-dur", 0.9, Def("", TimeGroup(percentiles)), skippedCaseAttributes, skippedEventAttributes, null, targetDir);

// BPIC18
Let("skippedCaseAttributes", ["amount_applied0","applicant","application","area","basic payment","cross_compliance","greening","identity:id","number_parcels","payment_actual0","penalty_ABP","penalty_AGP","penalty_AJLP","penalty_AUVP","penalty_AVBP","penalty_AVGP","penalty_AVJLP","penalty_AVUVP","penalty_B16","penalty_B3","penalty_B4","penalty_B5","penalty_B5F","penalty_B6","penalty_BGK","penalty_BGKV","penalty_BGP","penalty_C16","penalty_C4","penalty_C9","penalty_CC","penalty_JLP1","penalty_JLP2","penalty_JLP3","penalty_JLP5","penalty_JLP6","penalty_JLP7","penalty_V5","program-id","redistribution","rejected","risk_factor","selected_manually","selected_random"]); // (10) department, number_parcels, penalty_amount0, penalty_B2, penalty_GP1, selected_risk, small farmer, year, young farmer
Let("skippedEventAttributes", ["docid", "docid_uuid", "eventid", "identity:id", "lifecycle:transition", "success"]); // "activity", "doctype", "note", "org:resource", "subprocess"
Let("filterPercentage", 0.2);
CreateEventLogExports("BPI Challenge 2018", "BPIC18-young-farmer", 0.9, Def("", Attribute("young farmer")), Concat(["young farmer"], skippedCaseAttributes), skippedEventAttributes, null, targetDir);
CreateEventLogExports("BPI Challenge 2018", "BPIC18-long-running", 1.0, Def("", Duration.TotalDays >= 28), skippedCaseAttributes, skippedEventAttributes, null, targetDir);
CreateEventLogExportsForNextEventPrediction("BPI Challenge 2018", "BPIC18-ne", 0.9, filterPercentage, skippedCaseAttributes, skippedEventAttributes, targetDir);
CreateEventLogExportsForGeneratedCases("BPI Challenge 2018", "BPIC18-not-revoked-decision", 0.9, Def("", "cases", "caseAttributes", "eventAttributes", GetCasesForPredictingEventTypeOccurrence(cases, caseAttributes, eventAttributes, "revoke decision", 1, filterPercentage)), skippedCaseAttributes, skippedEventAttributes, targetDir);
Let("el", EventLogByModelName("BPI Challenge 2018"));
Let("percentiles", Percentile(EventLogByModelName("BPI Challenge 2018").Cases.Duration.TotalDays, [0.1, 0.25, 0.75, 0.9]));
CreateEventLogExports("BPI Challenge 2018", "BPIC18-dur", 0.9, Def("", TimeGroup(percentiles)), skippedCaseAttributes, skippedEventAttributes, null, targetDir);
